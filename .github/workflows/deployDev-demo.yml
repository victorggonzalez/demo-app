name: Deploy to S3

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  # push:
  #   branches: [ master ]
  #   tags: 
  #     - .*
  # pull_request:
  #   branches: [master]
  
  # Allows you to run this workflow manually from the Actions tab
  repository_dispatch:
    types: [staging-deployment]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
env: 
  VERSION: ${{ github.event.client_payload.tag }}
jobs:
  # This workflow contains a single job called "deploy-dev"
  deploy-dev:
    name: Build and Deploy Image
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    env:
      # default build directory
      BUILD_FOLDER: 'build/'

      # rename necessary variables used in the app
      REACT_APP_VERSION: 'latest'
      AWS_REGION: eu-central-1        
    
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    - name: Check out code
      uses: actions/checkout@v2
      
    # - name: Set Tag Number
    #   id: tag-number
    #   run: echo ::set-output name=tag::${GITHUB_REF#refs/*/}
      
    # - name: Check Tag Release
    #   env:
    #       RELEASE_VERSION: ${{ steps.tag-number.outputs.tag }}
    #   run: |
    #       echo $RELEASE_VERSION
    #       echo ${{ steps.vars.outputs.tag }}

    - name: Setup node
      id: setup-node
      uses: actions/setup-node@v2
      with:
        node-version: '16'
        check-latest: true

    - name: Build image
      id: build-image
      run: |
        npm install
        npm run build
    #     # yarn install
    #     # yarn build
          
    # - name: Configure AWS credentials
    #   uses: aws-actions/configure-aws-credentials@v1
    #   with:
    #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #     aws-region: ${{ env.AWS_REGION }}
    

    # - name: S3 Sync
    #   id: sync-s3
    #   env:
    #     AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET_NAME }}
    #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #     AWS_REGION: ${{ env.AWS_REGION }}
    #     SOURCE_DIR: 'build'
    #   # --acl public-read makes your files publicly readable 
    #   # --follow-symlinks won't hurt and fixes some weird symbolic link problems that may come up
    #   # --delete permanently deletes files in the S3 bucket that are not present in the latest version of your repository/build.
    #   run: aws s3 sync ${{env.SOURCE_DIR}} s3://${AWS_S3_BUCKET} --acl public-read --follow-symlinks --delete


    # - name: Invalidate CloudFront distribution
    #   run: aws cloudfront create-invalidation --distribution-id ${{ secrets.DEMO_APP_CLOUDFRONT_DISTRIBUTION }} --paths '/*'

